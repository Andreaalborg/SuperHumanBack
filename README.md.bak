# SuperHuman Backend

Backend API for SuperHuman - din personlige utviklingsapp!

## 🚀 Quick Start

### 1. Forutsetninger

Installer følgende programmer:
- **Node.js** (v18+): https://nodejs.org/
- **PostgreSQL** (v15+): https://www.postgresql.org/download/
- **pgAdmin 4** (valgfritt): Kommer med PostgreSQL

### 2. Database Setup

#### Alternativ A: Lokal PostgreSQL
1. Åpne pgAdmin eller psql
2. Opprett database:
```sql
CREATE DATABASE superhuman_db;
```

3. Kjør setup script:
```bash
psql -U postgres -d superhuman_db -f database/setup.sql
```

#### Alternativ B: Supabase (Gratis cloud)
1. Gå til https://supabase.com
2. Opprett nytt prosjekt
3. Kopier database URL til `.env`

### 3. Backend Setup

1. Installer dependencies:
```bash
npm install
```

2. Kopier og rediger `.env`:
```bash
cp .env.example .env
# Rediger .env med dine database credentials
```

3. Start serveren:
```bash
npm run dev
```

Backend kjører nå på http://localhost:4000

### 4. Test API

Åpne http://localhost:4000/graphql for GraphQL Playground

#### Registrer bruker:
```graphql
mutation {
  register(input: {
    email: "test@test.com"
    password: "123456"
    name: "Test Bruker"
  }) {
    token
    user {
      id
      email
      name
    }
  }
}
```

#### Login:
```graphql
mutation {
  login(input: {
    email: "test@test.com"
    password: "123456"
  }) {
    token
    user {
      id
      email
    }
  }
}
```

#### Lagre aktivitet (krever auth token):
```graphql
mutation {
  saveActivity(input: {
    categoryId: "physical"
    name: "Morgenløp"
    duration: 30
    points: 20
  }) {
    id
    name
    points
  }
}
```

Husk å sette Authorization header:
```
Authorization: Bearer <din-token-her>
```

## 📁 Prosjektstruktur

```
backend/
├── src/
│   ├── config/        # Konfigurasjon (database, auth, constants)
│   ├── entities/      # TypeORM entities
│   ├── graphql/       # GraphQL schema
│   ├── middleware/    # Express middleware
│   ├── resolvers/     # GraphQL resolvers
│   ├── services/      # Business logic
│   └── utils/         # Hjelpefunksjoner
├── database/          # SQL scripts
├── .env              # Miljøvariabler (ikke i git)
└── package.json
```

## 🔧 NPM Scripts

- `npm run dev` - Start i development mode med hot reload
- `npm run build` - Bygg for produksjon
- `npm start` - Start produksjonsserver
- `npm test` - Kjør tester

## 🌟 Features

### Implementert ✅
- Brukerregistrering og innlogging (JWT)
- Aktivitetslogging med poeng
- Progresjonssporing per kategori
- Level-system med achievements
- Fleksibel datastruktur (JSONB)
- GraphQL API

### Kommer snart 🚧
- Sosiale features (venner, grupper)
- Push notifications
- AI anbefalinger
- Bildeupload
- Real-time updates

## 🛡️ Sikkerhet

- Passord hashes med bcrypt
- JWT tokens for autentisering
- Rate limiting på API
- Input validering
- SQL injection beskyttelse

## 🐛 Troubleshooting

### "Database connection failed"
- Sjekk at PostgreSQL kjører
- Verifiser credentials i `.env`
- Sjekk at database `superhuman_db` eksisterer

### "Cannot find module"
- Kjør `npm install` på nytt
- Slett `node_modules` og installer på nytt

### Port 4000 i bruk
- Endre PORT i `.env`
- Eller stopp annen prosess på port 4000

## 📝 Miljøvariabler

Se `.env.example` for alle tilgjengelige variabler.

Viktigste:
- `DB_PASSWORD` - PostgreSQL passord
- `JWT_SECRET` - Endre dette i produksjon!
- `FRONTEND_URL` - URL til frontend (for CORS)

## 🚀 Deployment

Se `/docs/deployment.md` for instruksjoner om deployment til:
- Railway
- Render
- Heroku
- VPS

## 📄 Lisens

Privat prosjekt - alle rettigheter forbeholdt.
